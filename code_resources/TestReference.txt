/* (C)2024 */<br>
package CBuilder;<br>
<br>
import static org.junit.jupiter.api.Assertions.assertEquals;<br>
<br>
import java.util.stream.Stream;<br>
import org.junit.jupiter.params.ParameterizedTest;<br>
import org.junit.jupiter.params.provider.MethodSource;<br>
<br>
public class TestReference {<br>
&emsp;String testClass = "[REFERENCE]";<br>
<br>
&emsp;private static Stream<String> sources() {<br>
&emsp;&emsp;return Stream.of("ref1", "ref2");<br>
&emsp;}<br>
<br>
&emsp;@ParameterizedTest<br>
&emsp;@MethodSource("sources")<br>
&emsp;void constructor(String name) {<br>
&emsp;&emsp;Reference ref = new Reference(name);<br>
<br>
&emsp;&emsp;System.out.println(testClass + ref.getName());<br>
<br>
&emsp;&emsp;assertEquals(name, ref.getName());<br>
&emsp;}<br>
<br>
&emsp;@ParameterizedTest<br>
&emsp;@MethodSource("sources")<br>
&emsp;void build_expression(String name) {<br>
&emsp;&emsp;Reference ref = new Reference(name);<br>
<br>
&emsp;&emsp;System.out.println(testClass + ref.buildExpression());<br>
<br>
&emsp;&emsp;assertEquals(name, ref.buildExpression());<br>
&emsp;}<br>
<br>
&emsp;@ParameterizedTest<br>
&emsp;@MethodSource("sources")<br>
&emsp;void build_statement(String name) {<br>
&emsp;&emsp;Reference ref = new Reference(name);<br>
<br>
&emsp;&emsp;System.out.println(testClass + ref.buildStatement());<br>
<br>
&emsp;&emsp;assertEquals(name + ";", ref.buildStatement());<br>
&emsp;}<br>
}